name: ${PROJECT_NAME}

services:
  # ---------- MySQL group ----------
  mysql-auth:
    image: ${MYSQL_IMAGE}
    container_name: mysql-auth
    environment:
      TZ: ${TZ}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_AUTH}
      MYSQL_USER: ${AUTH_DB_USER}
      MYSQL_PASSWORD: ${AUTH_DB_PASS}
    command:
      [
        "--character-set-server=utf8mb4",
        "--collation-server=utf8mb4_vi_0900_ai_ci",
        "--default-time-zone=+00:00",
      ]
    volumes:
      - auth_data:/var/lib/mysql
      - ../services/auth/src/main/resources/db/ddl:/docker-entrypoint-initdb.d
    ports:
      - "33061:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 20
    networks: [booknest]
    restart: unless-stopped
    # platform: linux/amd64  # bật nếu dùng Mac ARM và gặp lỗi

  mysql-catalog:
    image: ${MYSQL_IMAGE}
    container_name: mysql-catalog
    environment:
      TZ: ${TZ}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_CATALOG}
      MYSQL_USER: ${CATALOG_DB_USER}
      MYSQL_PASSWORD: ${CATALOG_DB_PASS}
    command:
      [
        "--character-set-server=utf8mb4",
        "--collation-server=utf8mb4_vi_0900_ai_ci",
        "--default-time-zone=+00:00",
      ]
    volumes:
      - catalog_data:/var/lib/mysql
      - ../services/catalog/src/main/resources/db/ddl:/docker-entrypoint-initdb.d
    ports:
      - "33062:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 20
    networks: [booknest]
    restart: unless-stopped

  mysql-search:
    image: ${MYSQL_IMAGE}
    container_name: mysql-search
    environment:
      TZ: ${TZ}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_SEARCH}
      MYSQL_USER: ${SEARCH_DB_USER}
      MYSQL_PASSWORD: ${SEARCH_DB_PASS}
    command:
      [
        "--character-set-server=utf8mb4",
        "--collation-server=utf8mb4_vi_0900_ai_ci",
        "--default-time-zone=+00:00",
      ]
    volumes:
      - search_data:/var/lib/mysql
      - ../services/search/src/main/resources/db/ddl:/docker-entrypoint-initdb.d
    ports:
      - "33063:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 20
    networks: [booknest]
    restart: unless-stopped

  mysql-order:
    image: ${MYSQL_IMAGE}
    container_name: mysql-order
    environment:
      TZ: ${TZ}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_ORDER}
      MYSQL_USER: ${ORDER_DB_USER}
      MYSQL_PASSWORD: ${ORDER_DB_PASS}
    command:
      [
        "--character-set-server=utf8mb4",
        "--collation-server=utf8mb4_vi_0900_ai_ci",
        "--default-time-zone=+00:00",
      ]
    volumes:
      - order_data:/var/lib/mysql
      - ../services/order/src/main/resources/db/ddl:/docker-entrypoint-initdb.d
    ports:
      - "33064:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 20
    networks: [booknest]
    restart: unless-stopped

  mysql-payment:
    image: ${MYSQL_IMAGE}
    container_name: mysql-payment
    environment:
      TZ: ${TZ}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_PAYMENT}
      MYSQL_USER: ${PAYMENT_DB_USER}
      MYSQL_PASSWORD: ${PAYMENT_DB_PASS}
    command:
      [
        "--character-set-server=utf8mb4",
        "--collation-server=utf8mb4_vi_0900_ai_ci",
        "--default-time-zone=+00:00",
      ]
    volumes:
      - payment_data:/var/lib/mysql
      - ../services/payment/src/main/resources/db/ddl:/docker-entrypoint-initdb.d
    ports:
      - "33065:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 20
    networks: [booknest]
    restart: unless-stopped

  mysql-library:
    image: ${MYSQL_IMAGE}
    container_name: mysql-library
    environment:
      TZ: ${TZ}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_LIBRARY}
      MYSQL_USER: ${LIBRARY_DB_USER}
      MYSQL_PASSWORD: ${LIBRARY_DB_PASS}
    command:
      [
        "--character-set-server=utf8mb4",
        "--collation-server=utf8mb4_vi_0900_ai_ci",
        "--default-time-zone=+00:00",
      ]
    volumes:
      - library_data:/var/lib/mysql
      - ../services/library/src/main/resources/db/ddl:/docker-entrypoint-initdb.d
    ports:
      - "33066:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 20
    networks: [booknest]
    restart: unless-stopped

  mysql-review:
    image: ${MYSQL_IMAGE}
    container_name: mysql-review
    environment:
      TZ: ${TZ}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_REVIEW}
      MYSQL_USER: ${REVIEW_DB_USER}
      MYSQL_PASSWORD: ${REVIEW_DB_PASS}
    command:
      [
        "--character-set-server=utf8mb4",
        "--collation-server=utf8mb4_vi_0900_ai_ci",
        "--default-time-zone=+00:00",
      ]
    volumes:
      - review_data:/var/lib/mysql
      - ../services/review/src/main/resources/db/ddl:/docker-entrypoint-initdb.d
    ports:
      - "33067:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 20
    networks: [booknest]
    restart: unless-stopped

  # ---------- Java services ----------
  auth:
    build: ../services/auth
    container_name: auth
    environment:
      TZ: ${TZ}
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-auth:3306/${DB_AUTH}?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: ${AUTH_DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${AUTH_DB_PASS}
    depends_on:
      mysql-auth:
        condition: service_healthy
    networks: [booknest]
    restart: unless-stopped

  catalog:
    build: ../services/catalog
    container_name: catalog
    environment:
      TZ: ${TZ}
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-catalog:3306/${DB_CATALOG}?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: ${CATALOG_DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${CATALOG_DB_PASS}
    depends_on:
      mysql-catalog:
        condition: service_healthy
    networks: [booknest]
    restart: unless-stopped

  search:
    build: ../services/search
    container_name: search
    environment:
      TZ: ${TZ}
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-search:3306/${DB_SEARCH}?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: ${SEARCH_DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${SEARCH_DB_PASS}
    depends_on:
      mysql-search:
        condition: service_healthy
    networks: [booknest]
    restart: unless-stopped

  order:
    build: ../services/order
    container_name: order
    environment:
      TZ: ${TZ}
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-order:3306/${DB_ORDER}?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: ${ORDER_DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${ORDER_DB_PASS}
    depends_on:
      mysql-order:
        condition: service_healthy
    networks: [booknest]
    restart: unless-stopped

  payment:
    build: ../services/payment
    container_name: payment
    environment:
      TZ: ${TZ}
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-payment:3306/${DB_PAYMENT}?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: ${PAYMENT_DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${PAYMENT_DB_PASS}
    depends_on:
      mysql-payment:
        condition: service_healthy
    networks: [booknest]
    restart: unless-stopped

  library:
    build: ../services/library
    container_name: library
    environment:
      TZ: ${TZ}
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-library:3306/${DB_LIBRARY}?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: ${LIBRARY_DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${LIBRARY_DB_PASS}
    depends_on:
      mysql-library:
        condition: service_healthy
    networks: [booknest]
    restart: unless-stopped

  storage:
    build: ../services/storage
    container_name: storage
    environment:
      TZ: ${TZ}
      UPLOAD_DIR: ${STORAGE_UPLOAD_DIR}
    volumes:
      - storage_uploads:/uploads
    networks: [booknest]
    restart: unless-stopped

  review:
    build: ../services/review
    container_name: review
    environment:
      TZ: ${TZ}
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-review:3306/${DB_REVIEW}?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: ${REVIEW_DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${REVIEW_DB_PASS}
    depends_on:
      mysql-review:
        condition: service_healthy
    networks: [booknest]
    restart: unless-stopped

  # ---------- Gateway & Frontend ----------
  gateway:
    build: ../gateway
    container_name: gateway
    environment:
      TZ: ${TZ}
    ports:
      - "${GATEWAY_PORT}:8080"
    depends_on:
      auth:
        condition: service_started
      catalog:
        condition: service_started
      search:
        condition: service_started
      storage:
        condition: service_started
      order:
        condition: service_started
      payment:
        condition: service_started
      library:
        condition: service_started
      review:
        condition: service_started
    networks: [booknest]
    restart: unless-stopped

  web-frontend:
    build: ../web_frontend
    container_name: web-frontend
    environment:
      TZ: ${TZ}
      VITE_API_BASE: http://localhost:${GATEWAY_PORT}
    ports:
      - "${WEB_PORT}:5173"
    networks: [booknest]
    restart: unless-stopped

networks:
  booknest:
    name: ${NETWORK_NAME}

volumes:
  auth_data: {}
  catalog_data: {}
  search_data: {}
  order_data: {}
  payment_data: {}
  library_data: {}
  storage_uploads: {}
  review_data: {}
